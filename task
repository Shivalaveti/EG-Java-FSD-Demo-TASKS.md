
TASK1

what is nested if?
Ans: nested if means a loop that executed in another loop
Example:

public class NestedIf {
    public static void main(String[] args) {
        int a = 100;
        int b = 200;
           if(a > 50){
                 System.out.println("a is greater than 50");
          if(b > 100){
                System.out.println("b is greater than 100");} 
            else {
                System.out.println("b is not greater than 100");}
                }
       else {
            System.out.println("a is not greater than 50");
        }
    }
}
Output: a is greater than 50
        b is greater  than 50
___________________________________________________________________________________________________________________________________________________________________________
TASK 2

Q) When for loop becomes infinite?
For loop becomes infinite if we dont give condition properly in parantheses.

class InfiniteFor{
    public static void main(String[] args){
        for(;;){
            System.out.println("infinite");
    }
   }
}

Output: infinite
        infinite ... upto so on  
_________________________________________________________________________________________________________________________________
TASK 3

for loop possibilities
1)
class ForEg{
public static void main(String[] args){ 
   int i=90;
  for(;i>100;i++){
  System.out.println("hi");
}
}
}
Result: compiled and get no error but result is blank

2)
class ForEg{
public static void main(String[] args){ 
   int i=90;
  for(;i>100;i--){
  System.out.println("hi");
}
}
}
Result: compiled and get no error but result is blank

3)
class ForEg{
public static void main(String[] args){ 
   int i=90;
for(; ;i++){
  System.out.println("hi");
}
}
}
Result: compiled and output is hi up to so on

4)
class ForEg{
public static void main(String[] args){ 
   int i=90;
for(;i<100;i++){
  System.out.println("hi");
}
}
}
Result: 
hi
hi
hi
hi
hi
hi
hi
hi
hi
hi

4)
class ForEg{
public static void main(String[] args){ 
   
int i=90;
for(;i<100;i+=2){
  System.out.println("hi");
}
}
}
Result:
hi
hi
hi
hi
hi
____________________________________________________________________________________________________________________________-

TASK 3

Q) Write a program to find sum of digits of numbrt  until we get a single digit as a sum

Ans: According to question 
the logic is, if a num is 53434 
first--> 5+3-->8+4-->12+3-->15+4 =19-->again one more time 1+9=10 amd again 1+0=1 finally we get the ans as 1 here.
Program:

class SumOfDigits{
    public static void main(String[] args){
        int num = 53434;
        int sum = DigitSum(num);
        int sumOfsum =DigitSum(sum);
        int sumOfsumOfsum =DigitSum(sumOfsum);
        System.out.println(sumOfsumOfsum);
    }
    
    public static int DigitSum(int num){
        int temp = num;
        int sum = 0;
        while (temp != 0){
            int digit = temp % 10;
            sum += digit;
            temp /= 10;
        }
        return sum;
    }
}

Result: 1
______________________________________________________________________________________________________________________________
TASK4
Q) Write a program to find prime numbers from 2 to n
here we assume n as 100
so we can find prime numbers from 2 to 100 here
Program:

public class PrimeNumbers {
    public static void main(String[] args){
        int n = 100;
        System.out.println("PrimeNumbers");
        for (int i = 2; i <= n; i++) {
            if (isPrime(i)) {
                System.out.print(i + " ");
            }
        }
    }
    
    public static boolean isPrime(int num) {
        if (num <= 1) {
            return false;
        }
        for (int i = 2; i * i <= num; i++) {
            if (num % i == 0) {
                return false;
            }
        }
        return true;
    }
}


Output: 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97

______________________________________________________________________________________________________________________________________
